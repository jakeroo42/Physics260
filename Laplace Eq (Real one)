#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Apr 11 18:04:48 2019

@author: jakerabinowitz
"""

from numpy import zeros, max
from pylab import imshow, show, colorbar

# Constants
M = 101           # Number of grid points on a side
V = 1.0           # Voltage at top wall in volts
target = 1e-5     # Target accuracy in volts

# Arrays for potential
phi = zeros([M, M], float)
phi[0,:] = V
phiprime = zeros([M, M], float)

# Main loop
delta = 1.0
while delta > target:
    
    # Calculate new values of the potential
    for i in range(M):
        for j in range(M):
            
            # Apply boundary condition
            if i == 0 or i == M-1 or j == 0 or j == M-1:
                phiprime[i,j] = phi[i,j]
            # Relaxation method for Laplace equation
            else:
                phiprime[i,j] = (phi[i+1,j] + phi[i-1,j] + phi[i,j+1] + phi[i,j-1])/4
                
    # Calculate maximum difference from old values
    delta = max(abs(phi - phiprime))
    
    # Swap the two arrays
    phi,phiprime = phiprime,phi
    

# Plot results
imshow(phi, cmap="RdBu", vmin=-1.0, vmax=1.0)
colorbar()
show()