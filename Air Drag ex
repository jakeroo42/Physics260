#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Mon Mar 11 11:34:01 2019

@author: jakerabinowitz
"""

from numpy import cos, sin, pi, linspace
from pylab import show, plot

#constants

p = 1.225
r = 0.0381
cd = 0.47
m = 0.145
g = 9.8

t0 = 0
tf = 20
v = 0 #inital condition
N = 100 #number of steps 
h = (tf - t0)/N


def f(v,t):
    return g - (p*pi*r**2*cd*v**2)/(2*m)

tvalues = linspace(t0, tf, N)
vvalues = []

for t in tvalues:
    vvalues.append(v)
    #4th order range-kutta algorithm
    k1 = h*f(v, t)
    k2 = h*f(v+ 0.5*k1, t + 0.5*h)
    k3 = h*f(v+ 0.5*k2, t + 0.5*h)
    k4 = h*f(v + k3, t + h)
    v += (k1 + 2*k2 + 2*k3 + k4)/6
    
plot(tvalues, vvalues, 'b.')
